"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[7471],{6492:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>p,frontMatter:()=>o,metadata:()=>i,toc:()=>c});var n=s(5893),r=s(1151);const o={id:"esm-support",title:"ESM Support"},a=void 0,i={id:"guides/esm-support",title:"ESM Support",description:"To use jest-preset-angular with ESM support, you'll first need to check ESM Jest documentation.",source:"@site/docs/guides/esm-support.md",sourceDirName:"guides",slug:"/guides/esm-support",permalink:"/jest-preset-angular/docs/next/guides/esm-support",draft:!1,unlisted:!1,editUrl:"https://github.com/thymikee/jest-preset-angular/edit/main/website/docs/guides/esm-support.md",tags:[],version:"current",lastUpdatedBy:"renovate[bot]",lastUpdatedAt:1706778177,formattedLastUpdatedAt:"Feb 1, 2024",frontMatter:{id:"esm-support",title:"ESM Support"},sidebar:"docs",previous:{title:"Angular >=13",permalink:"/jest-preset-angular/docs/next/guides/angular-13+"},next:{title:"Configure other JSDOM versions",permalink:"/jest-preset-angular/docs/next/guides/jsdom-version"}},l={},c=[{value:"Examples",id:"examples",level:3},{value:"Manual configuration",id:"manual-configuration",level:4},{value:"Use ESM presets",id:"use-esm-presets",level:4}];function d(e){const t={a:"a",admonition:"admonition",code:"code",h3:"h3",h4:"h4",p:"p",pre:"pre",strong:"strong",...(0,r.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:["import Tabs from '@theme/Tabs';","\n","import TabItem from '@theme/TabItem';","\n","\n",(0,n.jsxs)(t.p,{children:["To use ",(0,n.jsx)(t.code,{children:"jest-preset-angular"})," with ESM support, you'll first need to check ",(0,n.jsx)(t.a,{href:"https://jestjs.io/docs/en/ecmascript-modules",children:"ESM Jest documentation"}),"."]}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.code,{children:"jest-preset-angular"})," supports ESM via a ",(0,n.jsx)(t.code,{children:"ts-jest"})," config option ",(0,n.jsx)(t.a,{href:"https://kulshekhar.github.io/ts-jest/docs/getting-started/options/useESM",children:"useESM"})," in combination with jest config option ",(0,n.jsx)(t.a,{href:"https://jestjs.io/docs/en/configuration#extensionstotreatasesm-arraystring",children:"extensionsToTreatAsEsm"}),"."]}),"\n",(0,n.jsxs)(t.p,{children:["There is also a ",(0,n.jsx)(t.a,{href:"/jest-preset-angular/docs/next/getting-started/presets",children:"preset"})," to work with ESM."]}),"\n",(0,n.jsx)(t.admonition,{type:"tip",children:(0,n.jsxs)(t.p,{children:["We have ",(0,n.jsx)(t.a,{href:"https://github.com/thymikee/jest-preset-angular/tree/main/examples",children:"example apps"})," which contains base ESM setup to work with Jest and Angular."]})}),"\n",(0,n.jsxs)(t.p,{children:["Besides, there is ",(0,n.jsx)(t.code,{children:"setup-jest.mjs"})," to add to Jest setup file to ensure that Jest can set up test environment properly."]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-ts",children:"import 'jest-preset-angular/setup-jest.mjs';\n"})}),"\n",(0,n.jsx)(t.h3,{id:"examples",children:"Examples"}),"\n",(0,n.jsx)(t.h4,{id:"manual-configuration",children:"Manual configuration"}),"\n",'<Tabs groupId="code-examples">',"\n",'<TabItem value="js" label="JavaScript">',"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-js",metastring:"tab",children:"module.exports = {\n  //...\n  extensionsToTreatAsEsm: ['.ts'],\n  transform: {\n    '^.+\\\\.(ts|js|html)$': [\n      'jest-preset-angular',\n      {\n        tsconfig: '<rootDir>/tsconfig.spec.json',\n        stringifyContentPathRegex: '\\\\.(html)$',\n        useESM: true,\n      },\n    ],\n  },\n};\n"})}),"\n","</TabItem>","\n",'<TabItem value="ts" label="TypeScript">',"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-ts",metastring:"tab",children:"import type { Config } from 'jest';\n\nconst jestConfig: Config = {\n  //...\n  extensionsToTreatAsEsm: ['.ts'],\n  transform: {\n    '^.+\\\\.(ts|js|html|svg)$': [\n      'jest-preset-angular',\n      {\n        tsconfig: '<rootDir>/tsconfig.spec.json',\n        stringifyContentPathRegex: '\\\\.(html|svg)$',\n        useESM: true,\n      },\n    ],\n  },\n};\n\nexport default jestConfig;\n"})}),"\n","</TabItem>","\n",'<TabItem value="JSON">',"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-JSON",metastring:"tab",children:'{\n  //...\n  "jest": {\n    "extensionsToTreatAsEsm": [".ts"],\n    "transform": {\n      "^.+\\\\.(ts|js|html|svg)$": [\n        "jest-preset-angular",\n        {\n          "tsconfig": "<rootDir>/tsconfig.spec.json",\n          "stringifyContentPathRegex": "\\\\.(html|svg)$",\n          "useESM": true,\n        },\n      ],\n    },\n  }\n}\n'})}),"\n","</TabItem>","\n","</Tabs>","\n",(0,n.jsx)(t.h4,{id:"use-esm-presets",children:"Use ESM presets"}),"\n",(0,n.jsxs)(t.admonition,{type:"tip",children:[(0,n.jsxs)(t.p,{children:["Jest will attempt to load ",(0,n.jsx)(t.strong,{children:"ESM"})," files from ",(0,n.jsx)(t.code,{children:"node_modules"})," with default ",(0,n.jsx)(t.code,{children:"jest-resolve"})," which usually works for most of the cases.\nHowever, there are cases like Angular libraries ",(0,n.jsx)(t.strong,{children:"ESM"})," built files or ",(0,n.jsx)(t.strong,{children:"ESM"})," files which are outside ",(0,n.jsx)(t.code,{children:"node_modules"})," might not be loaded\ncorrectly."]}),(0,n.jsxs)(t.p,{children:["To fix that, one can use ",(0,n.jsx)(t.code,{children:"moduleNameMapper"})," in jest config to instruct Jest to load the correct ",(0,n.jsx)(t.strong,{children:"ESM"})," files or create a\ncustom Jest ",(0,n.jsx)(t.a,{href:"https://jestjs.io/docs/configuration#resolver-string",children:"resolver"}),"."]})]}),"\n",'<Tabs groupId="code-examples">',"\n",'<TabItem value="js" label="JavaScript">',"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-js",metastring:"tab",children:"module.exports = {\n  //...\n  preset: 'jest-preset-angular/presets/defaults-esm',\n};\n"})}),"\n","</TabItem>","\n",'<TabItem value="ts" label="TypeScript">',"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-ts",metastring:"tab",children:"import type { Config } from 'jest';\n\nconst jestConfig = {\n  //...\n  preset: 'jest-preset-angular/presets/defaults-esm',\n};\n\nexport default jestConfig;\n"})}),"\n","</TabItem>","\n",'<TabItem value="JSON">',"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-JSON",metastring:"tab",children:'// OR package.json\n{\n  //...\n  "jest": {\n    "preset": "jest-preset-angular/presets/defaults-esm"\n  }\n}\n'})}),"\n","</TabItem>","\n","</Tabs>"]})}function p(e={}){const{wrapper:t}={...(0,r.a)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},1151:(e,t,s)=>{s.d(t,{Z:()=>i,a:()=>a});var n=s(7294);const r={},o=n.createContext(r);function a(e){const t=n.useContext(o);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),n.createElement(o.Provider,{value:t},e.children)}}}]);